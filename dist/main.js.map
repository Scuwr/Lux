{"version":3,"sources":["./src/app/main-component/main.services.ts","./src/environments/environment.ts","./src/app/main-component/main.component.ts","./src/app/main-component/main.component.html","./src/app/sidenav/sidenav.component.ts","./src/app/sidenav/sidenav.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/viewer-component/viewer.component.ts","./src/app/viewer-component/viewer.component.html","./src/app/app.module.ts","./src/app/main-component/mermaid_utils.ts","./src/app/app-routing.module.ts","./src/app/ngrx/main.reducer.ts","./src/app/utils/autofocus.directive.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\nconst API = {\r\n    usersAdd: '/api/usersAdd/',\r\n    usersGet: '/api/usersGet/',\r\n\r\n    storyAdd: '/api/storyAdd',\r\n    storyGet: '/api/storyGet',\r\n    storyGetAll: '/api/storyGetAll',\r\n\r\n    userAnnotationAdd: '/api/userAnnotationAdd',\r\n    userAnnotationGet: '/api/userAnnotationGet',\r\n    userAnnotationGetAllUsers: '/api/userAnnotationGetAllUsers',\r\n\r\n    telemetryAdd: '/api/telemetryAdd'\r\n}\r\n\r\n@Injectable()\r\nexport class MainService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    usersAdd(user) {\r\n        return this.http.post(API.usersAdd, {'data': user});\r\n    }\r\n\r\n    usersGet() {\r\n        return this.http.post(API.usersGet, {});\r\n    }\r\n\r\n    storyAdd(story) {\r\n        return this.http.post(API.storyAdd, {'data': story});\r\n    }\r\n\r\n    storyGet(storyNum) {\r\n        return this.http.post(API.storyGet, {'data': storyNum});\r\n    }\r\n\r\n    storyGetAll() {\r\n        return this.http.post(API.storyGetAll, {});\r\n    }\r\n\r\n    userAnnotationAdd(user, storyNum, jsonGraph) {\r\n        return this.http.post(API.userAnnotationAdd, {'user': user, 'storyNum': storyNum, 'data': jsonGraph});\r\n    }\r\n\r\n    userAnnotationGet(user, storyNum) {\r\n        return this.http.post(API.userAnnotationGet, {'user': user, 'storyNum': storyNum});\r\n    }\r\n\r\n    userAnnotationGetAllUsers(storyNum) {\r\n        return this.http.post(API.userAnnotationGetAllUsers, {'storyNum': storyNum});\r\n    }\r\n\r\n    telemetryAdd(user, data) {\r\n        return this.http.post(API.telemetryAdd, {'user': user, 'data': data});\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostListener, OnInit, Output, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { filter, first, takeUntil } from 'rxjs/operators';\r\n\r\nimport { Store } from '@ngrx/store';\r\nimport {ConfirmationService, MessageService} from 'primeng/api';\r\n\r\n\r\nimport { MainService } from './main.services';\r\nimport { mermaid_utils } from './mermaid_utils'\r\nimport { mainActions, selectAllStories, selectMainState, selectSelectedStory, selectSideNavStatus } from '../ngrx/main.reducer';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'main-root',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss'],\r\n})\r\nexport class MainComponent implements AfterViewInit  {\r\n  @ViewChild('mermaid', { static: true }) mermaidDiv: ElementRef;\r\n  @ViewChildren('storyRow', { read: ElementRef }) rowElement: QueryList<ElementRef>;\r\n  @ViewChild('edgeDialogInp2') edgeDialogInp2: ElementRef; // to change focus\r\n\r\n  private readonly ngDestroyed$ = new Subject();\r\n\r\n  username = null;\r\n\r\n  selectedStory = null;\r\n  sidenavVisible = true;\r\n  keyboardCaptureElement = null; // prevent KB shortcuts if selected element\r\n\r\n  dialogues = {\r\n    username: {\r\n      display: true,\r\n      input: null\r\n    },\r\n    rename: {\r\n      display: false,\r\n      input: null,\r\n      node: null,\r\n    },\r\n    newNode: {\r\n      display: false,\r\n      input: null,\r\n      connectedNode: null,\r\n      physical: true,\r\n      hypothetical: false,\r\n    },\r\n    newEdge: {\r\n      display: false,\r\n      node1: null,\r\n      node2: null,\r\n      physical: true,\r\n    },\r\n    help: {\r\n      display: false,\r\n    }\r\n  }\r\n\r\n\r\n  allStories = null\r\n  // [\r\n  //   {\r\n  //     key: 1,\r\n  //     text: 'hello2hello2hello2hello2hello2hello2hello2hello2',\r\n  //     completed: true,\r\n  //   },\r\n  // ];\r\n\r\n  graph = {\r\n    // node_names: ['Start', 'Is it', 'End'],\r\n    // edges: [[0, 1], [1, 2]],\r\n    //node_names: [],\r\n    node_names: [{\r\n      name: '',\r\n      phsyical: true,\r\n      hypothetical: false,\r\n    }],\r\n    edges: [{\r\n      edge: [],\r\n      physical: true,\r\n    }],\r\n    comments: '',\r\n    confusing: false,\r\n  }\r\n\r\n  graphSinceLastSave = {}\r\n\r\n  graphStyle = {\r\n    clicked: null,\r\n    LR: true,\r\n  }\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private activatedRoute: ActivatedRoute,\r\n\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService,\r\n    private store: Store,\r\n\r\n    private mainService: MainService,\r\n  ) {\r\n    // this.userName = 'TEMPUSER';\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    window['app'] = this\r\n    window['mermaid_utils'] = mermaid_utils\r\n    mermaid_utils.init()\r\n    this.update()\r\n\r\n    this.store.select(selectSideNavStatus)\r\n      .pipe(takeUntil(this.ngDestroyed$))\r\n      .subscribe(status => {\r\n      this.sidenavVisible = status\r\n      this.cdr.detectChanges()\r\n    })\r\n\r\n    this.store.select(selectAllStories)\r\n      .pipe(takeUntil(this.ngDestroyed$))\r\n      .subscribe(v => this.allStories = v)\r\n\r\n    this.store.select(selectMainState)\r\n      .pipe(takeUntil(this.ngDestroyed$))\r\n      .subscribe(state => {\r\n      switch (state.action) {\r\n        case mainActions.setKeyboardFocudEle.type:\r\n          this.onFocusKeyboardElement(state.payload)\r\n          break;\r\n\r\n        case mainActions.setSelectedStory.type:\r\n          if (!this.username || (!!state.selectedStory && state.selectedStory.key == this.selectedStory?.key)) {\r\n            break\r\n          }\r\n          this.setSelectedStory(state.selectedStory)\r\n          break\r\n      \r\n        default:\r\n          break;\r\n      }\r\n    })\r\n\r\n    setTimeout(() => {\r\n      this.check_params_username()\r\n    }, 0);\r\n  }\r\n\r\n  onViewModeButton() {\r\n    this.router.navigate(['/view'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParamsHandling: 'preserve'\r\n    })\r\n  }\r\n\r\n  check_params_username() {\r\n    this.route.queryParams.pipe(\r\n      first()\r\n    ).subscribe((params) => {\r\n      if (!!params.username) { // username found in url parameters, login\r\n        this.dialogues.username.input = params.username\r\n        this.username_confirm()\r\n      }\r\n    })\r\n  }\r\n\r\n  async username_confirm() {\r\n    this.dialogues.username.input = this.dialogues.username.input.toLowerCase();\r\n    this.dialogues.username.input = this.dialogues.username.input.replaceAll(/[^a-z0-9]*/g, '')\r\n    if (this.dialogues.username.input.length == 0) {\r\n      this.messageService.add({severity:'error', summary:'Error', detail:'Username invalid.'})\r\n      return\r\n    }\r\n    this.username = this.dialogues.username.input\r\n    this.dialogues.username.display = false;\r\n\r\n    if (!this.allStories) {  // FETCH STORIES\r\n      this.store.dispatch(mainActions.PushLoader())\r\n      this.mainService.telemetryAdd(this.username, 'login').subscribe((resp) => {})\r\n      let res = await this.mainService.storyGetAll().toPromise();\r\n      let arr = res['resp'];\r\n      const result = []\r\n      Object.entries(arr).forEach(entry => {\r\n        let key = entry[0]\r\n        let story = entry[1]\r\n        result.push({\r\n          text: story,\r\n          key: key\r\n        })\r\n      })\r\n      this.store.dispatch(mainActions.setAllStories({allStories: result}))\r\n      this.store.dispatch(mainActions.PopLoader())\r\n    }\r\n\r\n    // set username in url\r\n    setTimeout(() => {\r\n      this.router.navigate([], {\r\n        relativeTo: this.activatedRoute,\r\n        queryParams: {username: this.username}, \r\n        queryParamsHandling: 'merge'\r\n      })\r\n    }, 0);\r\n    \r\n    // fetch storyid from url\r\n    this.route.queryParams.pipe(\r\n        first()\r\n      ).subscribe((params) => {\r\n        if (!!params.storyId) {\r\n          const id = params.storyId\r\n          const match = this.allStories.filter(s => s.key == id)\r\n          if (match.length > 0) this.store.dispatch(mainActions.setSelectedStory({ selectedStory: match[0] }))\r\n        }\r\n      })\r\n  }\r\n\r\n  toolbar_new_node() {\r\n    let conn = null\r\n    if (!!this.graphStyle.clicked) {\r\n      conn = Number(this.graphStyle.clicked)+1\r\n      this.setClickedNode(null)\r\n      this.update()\r\n    }\r\n\r\n    this.dialogues.newNode.input = ''\r\n    this.dialogues.newNode.connectedNode = !!conn ? conn : ''\r\n    this.dialogues.newNode.physical = true\r\n    this.dialogues.newNode.hypothetical = false\r\n    this.dialogues.newNode.display = true\r\n  }\r\n\r\n  toolbar_new_edge() {\r\n    let conn = null\r\n    if (!!this.graphStyle.clicked) {\r\n      conn = Number(this.graphStyle.clicked)+1\r\n      this.setClickedNode(null)\r\n      this.update()\r\n      setTimeout(() => {\r\n        this.edgeDialogInp2.nativeElement.focus()\r\n      }, 50);\r\n    }\r\n\r\n    this.dialogues.newEdge.node1 = !!conn ? conn : ''\r\n    this.dialogues.newEdge.node2 = ''\r\n    this.dialogues.newEdge.physical = true\r\n    this.dialogues.newEdge.display = true\r\n  }\r\n\r\n  toolbar_rename() {\r\n    if (!this.graphStyle.clicked) {\r\n      return\r\n    }\r\n    let conn = Number(this.graphStyle.clicked)\r\n    this.setClickedNode(null)\r\n    this.update()\r\n\r\n    const current_node_name = this.graph.node_names[conn].name\r\n    this.dialogues.rename.input = current_node_name\r\n    this.dialogues.rename.display = true\r\n    this.dialogues.rename.node = conn\r\n}\r\n\r\n  private sanitize_input(node_name) {\r\n    const reg = '0-9 a-z A-Z' + // alphanumeric\r\n      '\\-' + // dashes (must not have space after dash)\r\n      '\\/ \\& \\' . ,' // other characters\r\n    const matchReg = new RegExp('^[' + reg + ']+$')\r\n    const replaceReg = new RegExp('[^' + reg + ']', 'g')\r\n    if (!node_name.match(matchReg)) {\r\n      this.messageService.add({severity:'warn', summary:'Name Sanitized', detail:'Name contains invalid characters that were removed'})\r\n      node_name = node_name.replaceAll(replaceReg, '')\r\n    }\r\n    return node_name\r\n  }\r\n\r\n  toolbar_raneme_confirm() {\r\n    this.dialogues.rename.display = false\r\n    this.dialogues.rename.input = this.sanitize_input(this.dialogues.rename.input)\r\n    this.graph.node_names[this.dialogues.rename.node].name = this.dialogues.rename.input\r\n    this.save_and_update()\r\n  }\r\n\r\n  toolbar_new_node_confirm() {\r\n    this.dialogues.newNode.display = false\r\n    this.dialogues.newNode.input = this.sanitize_input(this.dialogues.newNode.input)\r\n    const newNodeId = mermaid_utils.addNode(this.graph, this.dialogues.newNode.input)\r\n    const conn = Number(this.dialogues.newNode.connectedNode + '') - 1\r\n    if (conn >= 0) {\r\n      this.addEdge(conn, newNodeId)\r\n    } else if (newNodeId >= 1) { // connect to last new node unless its the only node in the graph\r\n      this.addEdge(newNodeId-1, newNodeId)\r\n    }\r\n    this.save_and_update()\r\n  }\r\n\r\n  toolbar_new_edge_confirm(event, gotonext) {\r\n    if (!!gotonext) { // go to next input box\r\n      event.srcElement.parentElement.nextElementSibling.firstChild.focus()\r\n      return\r\n    }\r\n    this.dialogues.newEdge.display = false\r\n    const node1 = Number(this.dialogues.newEdge.node1 + '') - 1\r\n    const node2 = Number(this.dialogues.newEdge.node2 + '') - 1\r\n    const succ = this.addEdge(node1, node2)\r\n    if (succ) {\r\n      this.save_and_update()\r\n    }\r\n  }\r\n\r\n  toolbar_delete_node() {\r\n    if(!!this.graphStyle.clicked) {\r\n      mermaid_utils.deleteNode(this.graph, this.graphStyle.clicked)\r\n      this.setClickedNode(null)\r\n      this.save_and_update()\r\n    }\r\n  }\r\n\r\n  toolbar_clear_node_edges() {\r\n    if(!!this.graphStyle.clicked) {\r\n      mermaid_utils.deleteNodeEdges(this.graph, this.graphStyle.clicked)\r\n      this.setClickedNode(null);\r\n      this.save_and_update()\r\n    }\r\n  }\r\n\r\n  toolbar_clear_graph() {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to clear the current graph?',\r\n      header: 'Confirmation',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.clearGraph()\r\n        this.save_and_update()\r\n      },\r\n      reject: () => {}\r\n    });\r\n  }\r\n\r\n  toolbar_flip_graph_style() {\r\n    this.graphStyle.LR = !this.graphStyle.LR\r\n    this.update()\r\n  }\r\n\r\n  toolbar_flag_confusing(){\r\n    this.setClickedNode(null);\r\n    this.graph.confusing = !this.graph.confusing\r\n    this.save_and_update()\r\n  }\r\n\r\n  keyboardMem = {inp: '', time: Date.now()};\r\n  @HostListener('document:keydown', ['$event']) keydown(event: KeyboardEvent) {\r\n    // EXIT IF DIALOGUE OPEN OR TYPING IN A SELECTED ELEMENT\r\n    if (!!this.keyboardCaptureElement\r\n                  || !!this.dialogues.newNode.display\r\n                  || !!this.dialogues.newEdge.display\r\n                  || !!this.dialogues.rename.display\r\n                  || !!this.dialogues.username.display) {\r\n        return\r\n    }\r\n    const key = event.key.toLowerCase()\r\n    const keyCode = key.charCodeAt(0)\r\n    if (key == '?') { // HELP MENU\r\n      this.dialogues.help.display = true\r\n    } else if (key == '[' || key == ']') { // previous/next story\r\n      const dx = key == '[' ? -1 : 1\r\n      const curIndex = this.allStories.findIndex(v => v.key == this.selectedStory?.key)\r\n      let newIndex = curIndex + dx\r\n      newIndex = newIndex % this.allStories.length\r\n      newIndex = newIndex >= 0 ? newIndex : newIndex+this.allStories.length\r\n      const story = this.allStories[newIndex]\r\n      if (story !== undefined) {\r\n        this.store.dispatch(mainActions.setSelectedStory({ selectedStory: story }))\r\n      }\r\n    }\r\n\r\n    // EXIT IF NO STORY SELECTED\r\n    if (!this.selectedStory) {\r\n      return\r\n    }\r\n\r\n    if (key == 'c'){ //TOGGLE CONFUSING STORY\r\n      this.graph.confusing = !this.graph.confusing\r\n    }\r\n\r\n    if (this.graph.confusing) { //DISABLE HOTKEYS IF CONFUSING STORY\r\n      return\r\n    }\r\n\r\n    if (key == 'n') { // NEW NODE\r\n      this.toolbar_new_node()\r\n\r\n    } else if (key == 'e') { // NEW EDGE\r\n      this.toolbar_new_edge()\r\n\r\n    } else if (key == 'r') { // RENAME\r\n      if (!!this.graphStyle.clicked) {\r\n        this.toolbar_rename()\r\n      }\r\n\r\n    } else if (keyCode >= '0'.charCodeAt(0) && keyCode <= '9'.charCodeAt(0)) { // 0-9 select char\r\n      if (Date.now() - this.keyboardMem.time > 500) {\r\n        this.keyboardMem.inp = ''\r\n      }\r\n      this.keyboardMem.inp += key\r\n      this.keyboardMem.time = Date.now()\r\n      const node = Number(this.keyboardMem.inp) - 1\r\n      const nodeSingle = Number(key) - 1\r\n      if (Number.isInteger(node) && node >= 0 && node < this.graph.node_names.length) {\r\n        this.setClickedNode(node + '')\r\n        this.update()\r\n      } else {\r\n        this.keyboardMem.inp = ''\r\n        if (Number.isInteger(nodeSingle) && nodeSingle >= 0 && nodeSingle < this.graph.node_names.length) {\r\n          this.setClickedNode(nodeSingle + '')\r\n          this.update()\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('document:keydown.escape', ['$event']) onEscapeKey(event: KeyboardEvent) {\r\n    this.setClickedNode(null)\r\n    this.update()\r\n  }\r\n\r\n  onFocusKeyboardElement(event?) {\r\n    if(event){\r\n        this.keyboardCaptureElement = event.target;\r\n    } else {\r\n        this.keyboardCaptureElement = null; \r\n    }\r\n  }\r\n\r\n  toggleSidenav() {\r\n    this.store.dispatch(mainActions.setSideNavVisible({ status: !this.sidenavVisible}))\r\n  }\r\n\r\n  async setSelectedStory(story) {\r\n    this.store.dispatch(mainActions.PushLoader())\r\n    let backendSave: Promise<any> = Promise.resolve()\r\n    if (!!this.selectedStory) {\r\n      backendSave = this.save_current_story_backend(this.selectedStory.key, this.graph, this.graphSinceLastSave)\r\n      this.selectedStory = null\r\n      this.clearGraph()\r\n      this.update()\r\n    }\r\n    if (!story) {\r\n      this.store.dispatch(mainActions.PopLoader())\r\n      return\r\n    }\r\n\r\n    this.mainService.telemetryAdd(this.username, 'get ' + story.key).subscribe((resp) => {})\r\n    let res = await this.mainService.userAnnotationGet(this.username, story.key).toPromise();\r\n    await backendSave\r\n\r\n    this.selectedStory = story\r\n\r\n    this.router.navigate([], {\r\n        relativeTo: this.activatedRoute,\r\n        queryParams: {storyId: story.key}, \r\n        queryParamsHandling: 'merge',\r\n      })\r\n\r\n    // PARSE RESPONSE\r\n    if(!!res['resp']){\r\n      var json = JSON.parse(res['resp']);\r\n\r\n      // FIX OLD GRAPH VERSION\r\n      if(!json.node_names[0].hasOwnProperty('name')){\r\n        this.graph.node_names.pop()\r\n        \r\n        for (let i in json.node_names){ \r\n          var node_names = {\r\n            name: json.node_names[i],\r\n            phsyical: true,\r\n            hypothetical: false,\r\n          }\r\n          \r\n          this.graph.node_names.push(node_names)\r\n        }\r\n      }else{\r\n        this.graph.node_names = json.node_names;\r\n      }\r\n\r\n      // FIX OLD GRAPH VERSION\r\n      if(!json.edges[0].hasOwnProperty('edge')){\r\n        this.graph.edges.pop()\r\n        \r\n        for (let i in json.edges){\r\n          var edges = {\r\n            edge: json.edges[i],\r\n            physical: true,\r\n          }\r\n          \r\n          this.graph.edges.push(edges)\r\n        }\r\n      }else{\r\n        this.graph.edges = json.edges;\r\n      }\r\n\r\n      this.graph.comments = json.comments;\r\n      this.graph.confusing = json.confusing;\r\n    }else{\r\n      this.graph.node_names = [];\r\n      this.graph.edges = [];\r\n      this.graph.comments = '';\r\n      this.graph.confusing = false;\r\n    }\r\n\r\n    this.graphSinceLastSave = JSON.parse(JSON.stringify(this.graph)) // duplicate graph\r\n    this.update()\r\n    this.store.dispatch(mainActions.PopLoader())\r\n  }\r\n\r\n  private setClickedNode(nodeClicked) {\r\n    this.graphStyle.clicked = nodeClicked\r\n  }\r\n\r\n  private addEdge(node1, node2) {\r\n    node1 = Number(node1)\r\n    node2 = Number(node2)\r\n\r\n    const validInputs =    Number.isInteger(node1) && node1 >= 0 && node1 < this.graph.node_names.length\r\n                        && Number.isInteger(node2) && node2 >= 0 && node2 < this.graph.node_names.length\r\n    if (!validInputs) {\r\n      this.messageService.add({severity:'error', summary:'Edge Error', detail:'Error adding edge.'})\r\n      return false\r\n    }\r\n\r\n    // check new edge is a duplicate\r\n    const isDup = this.graph.edges.some(pair => Number(pair[0])==node1 && Number(pair[1])==node2)\r\n    if (isDup) {\r\n      this.messageService.add({severity:'error', summary:'Edge Error', detail:'Duplicate edge not allowed.'})\r\n      return false\r\n    }\r\n\r\n    // check new edge will cause cycle\r\n    const willCycle = mermaid_utils.willBeCyclic(this.graph, node1, node2)\r\n    if (willCycle) {\r\n      this.messageService.add({severity:'error', summary:'Edge Cycle Error', detail:'Error adding edge. Cycle detected.'})\r\n      return false\r\n    }\r\n    \r\n    var edge = {\r\n      edge: [node1, node2],\r\n      physical: true,\r\n    }\r\n\r\n    mermaid_utils.addEdge(this.graph, edge)\r\n    return true\r\n  }\r\n\r\n  private clearGraph() {\r\n    this.graph.node_names = []\r\n    this.graph.edges = []\r\n    this.graph.comments = ''\r\n    this.graph.confusing = false\r\n    this.setClickedNode(null)\r\n  }\r\n\r\n  private async save_current_story_backend(storyKey, graph, graphSinceLastSave) {\r\n    if (mermaid_utils.isEqual(graph, graphSinceLastSave)) {\r\n      console.log('skipping save, is dup')\r\n      return\r\n    }\r\n    console.log('saving...')\r\n    graph = JSON.stringify(graph)\r\n    let res = await this.mainService.userAnnotationAdd(this.username, storyKey, graph).toPromise();\r\n    this.mainService.telemetryAdd(this.username, 'edit ' + storyKey).subscribe((resp) => {})\r\n    return res\r\n  }\r\n\r\n  private save_and_update() {\r\n    this.save_current_story_backend(this.selectedStory.key, this.graph, this.graphSinceLastSave).then((resp) => {\r\n      this.graphSinceLastSave = JSON.parse(JSON.stringify(this.graph)) // duplicate graph\r\n      this.update();\r\n    })\r\n  }\r\n\r\n  private callback(nodeClicked) {\r\n    if (this.graphStyle.clicked == nodeClicked) {  // same node clicked twice\r\n      // this.toolbar_rename()\r\n      this.setClickedNode(null)\r\n      this.update()\r\n      return\r\n    }\r\n\r\n    if (!this.graphStyle.clicked) {  // set node as clicked\r\n      this.setClickedNode(nodeClicked)\r\n      this.update()\r\n    } else { // two nodes clicked, add edge\r\n      this.addEdge(this.graphStyle.clicked, nodeClicked)\r\n      this.setClickedNode(null)\r\n      this.save_and_update()\r\n    }\r\n  }\r\n\r\n  update() {\r\n    const element: any = this.mermaidDiv.nativeElement\r\n    const graph_str = mermaid_utils.obj_to_graph_str(this.graph, this.graphStyle)\r\n    mermaid_utils.render(element, graph_str, this.callback.bind(this))\r\n  }\r\n\r\n\r\n\r\n  public async ngOnDestroy() {\r\n    await this.saveBeforeUnload()\r\n    this.ngDestroyed$.next();\r\n    this.ngDestroyed$.complete();\r\n  }\r\n\r\n  @HostListener('window:beforeunload')\r\n  @HostListener('window:unload', [ '$event' ])\r\n  async saveBeforeUnload() {\r\n    localStorage.setItem('test', 1 + Number(localStorage.getItem('test')) + '')\r\n    if (!!this.selectedStory) {\r\n      const backendSave = this.save_current_story_backend(this.selectedStory.key, this.graph, this.graphSinceLastSave)\r\n      this.selectedStory = null\r\n      await backendSave\r\n    }\r\n  }\r\n\r\n}\r\n","\r\n<!-- Toolbar -->\r\n<div class=\"toolbar\" role=\"banner\">\r\n  <p-button [icon]=\"!!sidenavVisible ? 'pi pi-arrow-left' : 'pi pi-arrow-right'\" (onClick)=\"toggleSidenav()\" pTooltip=\"Open/Close sidebar\" [ngStyle]=\"{'margin-left':'8px'}\"></p-button>\r\n  <img width=\"110\" alt=\"Logo\" src=\"assets/dag.png\"/>\r\n  <span>Lux</span>\r\n    <div class=\"spacer\"></div>\r\n  <div [ngStyle]=\"{'padding-right':'16px'}\">\r\n    Username: {{username}}\r\n  </div>\r\n  <p-button icon=\"pi pi-question-circle\" [ngStyle]=\"{'margin-right':'16px'}\" (click)=\"dialogues.help.display = true\"></p-button>\r\n  <p-button icon=\"fa-solid fa-binoculars\" [ngStyle]=\"{'margin-right':'16px'}\" (click)=\"onViewModeButton()\"></p-button>\r\n</div>\r\n\r\n\r\n\r\n<!-- LOGIN DIALOGUE -->\r\n<p-dialog header=\"Username\" [(visible)]=\"dialogues.username.display\" [modal]=\"true\" [closeOnEscape]=\"false\" [closable]=\"false\" [style]=\"{width: '25vw'}\" [baseZIndex]=\"10000\">\r\n  <span class=\"p-float-label\">\r\n    <input id=\"float-input\" type=\"text\" pInputText [(ngModel)]=\"dialogues.username.input\" (keydown.enter)=\"username_confirm()\" autofocus> \r\n    <label for=\"float-input\">Username</label>\r\n  </span>\r\n  \r\n  <ng-template pTemplate=\"footer\">\r\n    <p-button icon=\"pi pi-check\" [ngStyle]=\"{'margin-right':'8px'}\" (click)=\"username_confirm()\" label=\"Login\"></p-button>\r\n  </ng-template>\r\n</p-dialog>\r\n\r\n<!-- RENAME DIALOGUE -->\r\n<p-dialog header=\"Node Name\" [(visible)]=\"dialogues.rename.display\" [style]=\"{width: '25vw'}\" [baseZIndex]=\"10000\">\r\n  <span class=\"p-float-label\">\r\n    <input id=\"float-input\" type=\"text\" pInputText [(ngModel)]=\"dialogues.rename.input\" (keydown.enter)=\"toolbar_raneme_confirm()\" autofocus> \r\n    <label for=\"float-input\">New Name</label>\r\n  </span>\r\n    \r\n  <ng-template pTemplate=\"footer\">\r\n    <p-button icon=\"pi pi-check\" [ngStyle]=\"{'margin-right':'8px'}\" (click)=\"toolbar_raneme_confirm()\" label=\"Confirm\"></p-button>\r\n    <p-button icon=\"pi pi-times\" [ngStyle]=\"{'margin-right':'8px'}\" (click)=\"dialogues.rename.display=false\" label=\"Cancel\" styleClass=\"p-button-text ui-button\"></p-button>\r\n  </ng-template>\r\n</p-dialog>\r\n\r\n<!-- NEW NODE DIALOGUE -->\r\n<p-dialog header=\"Node Name\" [(visible)]=\"dialogues.newNode.display\" [style]=\"{width: '25vw'}\" [baseZIndex]=\"10000\">\r\n  <span class=\"p-float-label\">\r\n    <input id=\"float-input\" type=\"text\" pInputText [(ngModel)]=\"dialogues.newNode.input\" (keydown.enter)=\"toolbar_new_node_confirm()\" autofocus> \r\n    <label for=\"float-input\">New Name</label>\r\n  </span>\r\n  <span class=\"p-float-label\">\r\n    <input id=\"float-input\" type=\"text\" pInputText [(ngModel)]=\"dialogues.newNode.connectedNode\" (keydown.enter)=\"toolbar_new_node_confirm()\"> \r\n    <label for=\"float-input\">Connected Node</label>\r\n  </span>\r\n  <!--<span class=\"p-float-label\">\r\n    <mat-slide-toggle [(ngModel)]=\"dialogues.newNode.physical\" (keydown.enter)=\"toolbar_new_node_confirm()\">Physical Effect</mat-slide-toggle>\r\n  </span>\r\n  <span class=\"p-float-label\">\r\n    <mat-slide-toggle [(ngModel)]=\"dialogues.newNode.hypothetical\" (keydown.enter)=\"toolbar_new_node_confirm()\">Hypothetical Possibility</mat-slide-toggle>\r\n  </span>-->\r\n  \r\n  <ng-template pTemplate=\"footer\">\r\n    <p-button icon=\"pi pi-check\" [ngStyle]=\"{'margin-right':'8px'}\" (click)=\"toolbar_new_node_confirm()\" label=\"Confirm\"></p-button>\r\n    <p-button icon=\"pi pi-times\" [ngStyle]=\"{'margin-right':'8px'}\" (click)=\"dialogues.newNode.display=false\" label=\"Cancel\" styleClass=\"p-button-text ui-button\"></p-button>\r\n  </ng-template>\r\n</p-dialog>\r\n\r\n<!-- NEW EDGE DIALOGUE -->\r\n<p-dialog header=\"New Edge\" [(visible)]=\"dialogues.newEdge.display\" [style]=\"{width: '25vw'}\" [baseZIndex]=\"10000\">\r\n  <span class=\"p-float-label\">\r\n    <input id=\"float-input\" type=\"text\" pInputText [(ngModel)]=\"dialogues.newEdge.node1\" (keydown.enter)=\"toolbar_new_edge_confirm($event, true)\" autofocus> \r\n    <label for=\"float-input\">Node 1 ID</label>\r\n  </span>\r\n  <span class=\"p-float-label\">\r\n    <input #edgeDialogInp2 id=\"float-input\" type=\"text\" pInputText [(ngModel)]=\"dialogues.newEdge.node2\" (keydown.enter)=\"toolbar_new_edge_confirm($event, false)\"> \r\n    <label for=\"float-input\">Node 2 ID</label>\r\n  </span>\r\n  \r\n  <ng-template pTemplate=\"footer\">\r\n    <p-button icon=\"pi pi-check\" [ngStyle]=\"{'margin-right':'8px'}\" (click)=\"toolbar_new_edge_confirm()\" label=\"Confirm\"></p-button>\r\n    <p-button icon=\"pi pi-times\" [ngStyle]=\"{'margin-right':'8px'}\" (click)=\"dialogues.newEdge.display=false\" label=\"Cancel\" styleClass=\"p-button-text ui-button\"></p-button>\r\n  </ng-template>\r\n</p-dialog>\r\n\r\n<!-- HELP DIALOGUE -->\r\n<p-dialog header=\"Help Menu\" [(visible)]=\"dialogues.help.display\" [modal]=\"true\" [style]=\"{width: '35vw'}\" [baseZIndex]=\"10000\">\r\n  <div>\r\n    <p-panel header=\"Keyboard Shortcuts\" class=\"helpDialogue\">\r\n      <span class=\"boxedText\">?</span>\r\n        <span class=\"helpText\">Show Help Menu</span>\r\n\r\n      <br>\r\n      <br>\r\n      <span class=\"boxedText\">C</span>\r\n        <span class=\"helpText\">Toggle Confusing Story</span>\r\n      <br>\r\n      <span class=\"boxedText\">N</span>\r\n        <span class=\"helpText\">New node</span>\r\n      <br>\r\n      <span class=\"boxedText\">R</span>\r\n        <span class=\"helpText\">Rename node (while node is selected)</span>\r\n      <br>\r\n      <span class=\"boxedText\">E</span>\r\n        <span class=\"helpText\">New edge</span>\r\n\r\n      <br>\r\n      <br>\r\n\r\n      <span class=\"boxedText\">[</span>\r\n        <span class=\"helpText\">Previous story</span>\r\n      <br>\r\n      <span class=\"boxedText\">]</span>\r\n        <span class=\"helpText\">Next story</span>\r\n\r\n        <br>\r\n        <br>\r\n  \r\n        <span class=\"boxedText\">0-9</span>\r\n          <span class=\"helpText\">Highlight Nodes</span>\r\n\r\n\r\n    </p-panel>\r\n  </div>\r\n  \r\n  <ng-template pTemplate=\"footer\">\r\n    <p-button icon=\"pi pi-check\" [ngStyle]=\"{'margin-right':'8px'}\" (click)=\"dialogues.help.display = false\" label=\"Close\"></p-button>\r\n  </ng-template>\r\n</p-dialog>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div>\r\n\r\n<app-sidenav></app-sidenav>\r\n\r\n\r\n<div class=\"content\" role=\"main\" [ngClass]=\"{'sidenav-visible': sidenavVisible}\">\r\n\r\n  <!-- GRAPH TOOLBAR -->\r\n  <p-toolbar styleClass=\"graphToolbar\">\r\n    <div class=\"p-toolbar-group-left\">\r\n        <p-button icon=\"pi pi-plus\" [ngStyle]=\"{'margin-right':'5px'}\" \r\n            label=\"N&#818;ode\" [disabled]=\"!selectedStory || graph?.confusing\" (onClick)=\"toolbar_new_node()\"></p-button>\r\n        <p-button icon=\"pi pi-plus\" [ngStyle]=\"{'margin-right':'5px'}\" \r\n            label=\"E&#818;dge\" [disabled]=\"!selectedStory || graph?.confusing\" (onClick)=\"toolbar_new_edge()\"></p-button>\r\n        <p-button icon=\"pi pi-pencil\" [ngStyle]=\"{'margin-right':'5px'}\" styleClass=\"p-button-warning ui-button\" \r\n            label=\"R&#818;ename\" [disabled]=\"!graphStyle.clicked\" (onClick)=\"toolbar_rename()\"></p-button>\r\n        <p-button icon=\"pi pi-times\" [ngStyle]=\"{'margin-right':'5px'}\" styleClass=\"p-button-help ui-button\" \r\n            label=\"Node\" [disabled]=\"!graphStyle.clicked\" (onClick)=\"toolbar_delete_node()\"></p-button>\r\n        <p-button icon=\"pi pi-times\" [ngStyle]=\"{'margin-right':'5px'}\" styleClass=\"p-button-help ui-button\" \r\n            label=\"Edge\" [disabled]=\"!graphStyle.clicked\" (onClick)=\"toolbar_clear_node_edges()\"></p-button>\r\n        <p-button [icon]=\"!!graphStyle?.LR ? 'pi pi-arrows-h' : 'pi pi-arrows-v'\" [ngStyle]=\"{'margin-right':'5px'}\" styleClass=\"p-button-help ui-button\" \r\n            [disabled]=\"!selectedStory\" (onClick)=\"toolbar_flip_graph_style()\"></p-button>\r\n    </div>\r\n\r\n    <div class=\"p-toolbar-group-right\">\r\n      <p-button icon=\"pi pi-question\" [ngStyle]=\"{'margin-right':'8px'}\"\r\n          label=\"Confusing\" [disabled]=\"!selectedStory\" (onClick)=\"toolbar_flag_confusing()\"></p-button>\r\n      <p-button icon=\"pi pi-times\" [ngStyle]=\"{'margin-right':'8px'}\" styleClass=\"p-button-danger ui-button\" \r\n          label=\"Clear Graph\" [disabled]=\"!selectedStory\" (onClick)=\"toolbar_clear_graph()\"></p-button>\r\n    </div>\r\n  </p-toolbar>\r\n\r\n\r\n  <div class=\"scrollableContent\">\r\n\r\n    <!-- STORY -->\r\n    <div class=\"storyarea\">\r\n      <textarea [rows]=\"5\" pInputTextarea [ngModel]=\"!!selectedStory ? selectedStory?.text : 'No story selected.'\" autoResize=\"autoResize\" disabled=\"true\"></textarea>\r\n    </div>\r\n\r\n    <!-- COMMENTS -->\r\n    <div class=\"commentarea\">\r\n      <!-- <span>&nbsp;</span> -->\r\n      <span class=\"p-float-label\">\r\n        <textarea [rows]=\"3\" pInputTextarea id=\"float-input\" [(ngModel)]=\"graph.comments\" \r\n            autoResize=\"autoResize\" [disabled]=\"!selectedStory\"\r\n            (focus)=\"onFocusKeyboardElement($event)\" (blur)=\"onFocusKeyboardElement()\"\r\n        ></textarea>\r\n        <label for=\"float-input\">Comments</label>\r\n      </span>\r\n    </div>\r\n\r\n    <!-- GRAPH -->\r\n    <div [class]=\"!!graph?.confusing ? 'graphObscured noclick' : 'graph'\">\r\n      <div #mermaid></div>\r\n    </div>\r\n\r\n    <!-- CLOUD BACKGROUND :) -->\r\n    <svg id=\"clouds\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2611.084\" height=\"485.677\" viewBox=\"0 0 2611.084 485.677\">\r\n      <title>Gray Clouds Background</title>\r\n      <path id=\"Path_39\" data-name=\"Path 39\" d=\"M2379.709,863.793c10-93-77-171-168-149-52-114-225-105-264,15-75,3-140,59-152,133-30,2.83-66.725,9.829-93.5,26.25-26.771-16.421-63.5-23.42-93.5-26.25-12-74-77-130-152-133-39-120-212-129-264-15-54.084-13.075-106.753,9.173-138.488,48.9-31.734-39.726-84.4-61.974-138.487-48.9-52-114-225-105-264,15a162.027,162.027,0,0,0-103.147,43.044c-30.633-45.365-87.1-72.091-145.206-58.044-52-114-225-105-264,15-75,3-140,59-152,133-53,5-127,23-130,83-2,42,35,72,70,86,49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33,61.112,8.015,113.854-5.72,150.492-29.764a165.62,165.62,0,0,0,110.861-3.236c47,94,178,113,251,33,31.385,4.116,60.563,2.495,86.487-3.311,25.924,5.806,55.1,7.427,86.488,3.311,73,80,204,61,251-33a165.625,165.625,0,0,0,120,0c51,13,108,15,157-5a147.188,147.188,0,0,0,33.5-18.694,147.217,147.217,0,0,0,33.5,18.694c49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33C2446.709,1093.793,2554.709,922.793,2379.709,863.793Z\" transform=\"translate(142.69 -634.312)\" fill=\"#eee\"/>\r\n    </svg>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\n\r\n\r\nimport { selectAllStories, selectSideNavStatus, mainActions, selectSelectedStory } from '../ngrx/main.reducer';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss']\r\n})\r\nexport class SidenavComponent implements OnInit {\r\n\r\n  allStories = null;\r\n  filteredStories = null;\r\n  \r\n  selectedStory = null\r\n  selectedStoryIndex = -1\r\n\r\n  sidenavVisible = null;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private store: Store,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.store.select(selectAllStories).subscribe(v => {\r\n      this.allStories = v\r\n      this.filteredStories = v\r\n    })\r\n\r\n    this.store.select(selectSideNavStatus).subscribe(status => {\r\n      this.sidenavVisible = status\r\n      this.cdr.detectChanges()\r\n    })\r\n\r\n    this.store.select(selectSelectedStory).subscribe(v => {\r\n      this.selectedStory = v\r\n      if (!this.allStories) return\r\n      this.selectedStoryIndex = this.allStories.findIndex(v2 => v?.key == v2.key)\r\n    })\r\n  }\r\n\r\n\r\n  onFocusKeyboardElement(event?) {\r\n    this.store.dispatch(mainActions.setKeyboardFocudEle({ payload: event }))\r\n  }\r\n\r\n  sidebarClickStory(story) {\r\n    this.store.dispatch(mainActions.setSelectedStory({ selectedStory: story }))\r\n  }\r\n\r\n\r\n  sidenavSearchInput(searchText: string, enterKey: boolean) {\r\n    if (searchText.length == 0) {\r\n      this.filteredStories = this.allStories\r\n    } else if (enterKey) {\r\n      searchText = searchText.toLowerCase()\r\n      this.filteredStories = this.allStories.filter((story) => {\r\n        return story.text.toLowerCase().indexOf(searchText) > -1\r\n      })\r\n    }\r\n  }\r\n\r\n  paginate(event) {\r\n    console.log(event);\r\n    \r\n  }\r\n\r\n}\r\n","<!-- STORIES SIDEBAR -->\r\n<div id=\"mySidenav\" class=\"sidenav\" [ngClass]=\"{'sidenav-visible': sidenavVisible}\">\r\n  <!-- STORIES TOOLBAR -->\r\n  <!-- <p-toolbar> -->\r\n          <!-- <p-button icon=\"pi pi-plus\" (onClick)=\"sidebar_add_new_stories()\" pTooltip=\"Add New Story\"></p-button>\r\n          <p-button icon=\"pi pi-trash\" styleClass=\"p-button-danger ui-button\" pTooltip=\"Clear Everything\" [ngStyle]=\"{'margin-right':'8px'}\" (onClick)=\"sidebar_clear_all_stories()\"></p-button>\r\n          <p-button icon=\"pi pi-google\" styleClass=\"p-button-warning ui-button\" pTooltip=\"Load From Clipboard\" (onClick)=\"sidebar_load_data_from_clipboard()\"></p-button>\r\n          <p-button icon=\"pi pi-file-o\" styleClass=\"p-button-warning ui-button\" pTooltip=\"Load From File\" [ngStyle]=\"{'margin-right':'8px'}\" (onClick)=\"sidebar_load_data_from_file()\"></p-button>\r\n          <p-button icon=\"pi pi-save\" styleClass=\"ui-button\" pTooltip=\"Save to File\" (onClick)=\"sidebar_export()\"></p-button> -->\r\n  <!-- </p-toolbar> -->\r\n  <!-- SEARCH BOX -->\r\n  <input type=\"text\" pInputText \r\n      (input)=\"sidenavSearchInput($event.target.value, false)\" \r\n      (keyup.enter)=\"sidenavSearchInput($event.target.value, true)\"\r\n      (focus)=\"onFocusKeyboardElement($event)\" (blur)=\"onFocusKeyboardElement()\"\r\n    > \r\n  <!-- STORY LIST -->\r\n  <p-table [value]=\"filteredStories\" [scrollable]=\"true\" scrollHeight=\"calc(100vh - 155px)\" (onPageChange)=\"paginate($event)\">\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th style=\"max-width:50px\">Story</th>\r\n            <th style=\"text-align: right\" *ngIf=\"selectedStoryIndex >= 0\">{{selectedStoryIndex+1}}/{{allStories.length}}</th>\r\n          </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-story let-rowIndex=\"rowIndex\">\r\n        <tr #storyRow (click)=\"sidebarClickStory(story)\">\r\n            <td class=\"storyrow\" [ngClass]=\"{'selected': story.key==selectedStory?.key, 'completed': !!story.completed}\" >\r\n              {{rowIndex+1}}:{{story.text}}\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n  </p-table>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport {ProgressSpinnerModule} from 'primeng/progressspinner';\r\nimport { selectLoaderTasks } from './ngrx/main.reducer';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent implements OnInit {\r\n  loader = false;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private store: Store,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.store.select(selectLoaderTasks).subscribe(loadingTasks => {\r\n      this.loader = loadingTasks > 0\r\n      // console.log(this.loader)\r\n      this.cdr.detectChanges()\r\n    })\r\n  }\r\n\r\n}\r\n","<p-blockUI [blocked]=\"loader\">\r\n  <p-progressSpinner></p-progressSpinner>\r\n</p-blockUI>\r\n\r\n<p-toast></p-toast>\r\n<p-confirmDialog></p-confirmDialog>\r\n\r\n<div>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostListener, OnInit, Output, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { filter, first, takeUntil } from 'rxjs/operators';\r\n\r\nimport { Store } from '@ngrx/store';\r\nimport {ConfirmationService, MessageService} from 'primeng/api';\r\n\r\n\r\nimport { MainService } from '../main-component/main.services';\r\nimport { mermaid_utils } from '../main-component/mermaid_utils'\r\nimport { mainActions, selectAllStories, selectMainState, selectSelectedStory, selectSideNavStatus } from '../ngrx/main.reducer';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-viewer',\r\n  templateUrl: './viewer.component.html',\r\n  styleUrls: ['./viewer.component.scss'],\r\n})\r\nexport class ViewerComponent implements AfterViewInit  {\r\n  @ViewChild('mermaid', { static: true }) mermaidDiv: ElementRef;\r\n  @ViewChildren('storyRow', { read: ElementRef }) rowElement: QueryList<ElementRef>;\r\n\r\n  private readonly ngDestroyed$ = new Subject();\r\n\r\n  username = null;\r\n\r\n  selectedStory = null;\r\n  sidenavVisible = true;\r\n  keyboardCaptureElement = null; // prevent KB shortcuts if selected element\r\n\r\n\r\n  allStories = null\r\n\r\n  allGraphs: {data: any[], keys: string[]} = {data: [], keys: []}\r\n  tabViewIndex = 0;\r\n\r\n  graph = {\r\n    node_names: [],\r\n    edges: [],\r\n    comments: '',\r\n  }\r\n\r\n  graphStyle = {\r\n    clicked: null,\r\n    LR: true,\r\n  }\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private activatedRoute: ActivatedRoute,\r\n\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService,\r\n    private store: Store,\r\n\r\n    private mainService: MainService,\r\n  ) {\r\n    // this.userName = 'TEMPUSER';\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.ngDestroyed$.next();\r\n    this.ngDestroyed$.complete();\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    window['app'] = this\r\n    window['mermaid_utils'] = mermaid_utils\r\n    mermaid_utils.init()\r\n    this.update()\r\n\r\n    this.store.select(selectSideNavStatus)\r\n      .pipe(takeUntil(this.ngDestroyed$))\r\n      .subscribe(status => {\r\n      this.sidenavVisible = status\r\n      this.cdr.detectChanges()\r\n    })\r\n\r\n    this.store.select(selectAllStories)\r\n      .pipe(takeUntil(this.ngDestroyed$))\r\n      .subscribe(v => this.allStories = v)\r\n\r\n    this.store.select(selectSelectedStory)\r\n      .pipe(takeUntil(this.ngDestroyed$))\r\n      .subscribe(v => {\r\n        if (!v || v.key == this.selectedStory?.key) {\r\n          return\r\n        }\r\n        this.setSelectedStory(v)\r\n    })\r\n\r\n    this.store.select(selectMainState)\r\n      .pipe(takeUntil(this.ngDestroyed$))\r\n      .subscribe(state => {\r\n      switch (state.action) {\r\n        case mainActions.setKeyboardFocudEle.type:\r\n          this.onFocusKeyboardElement(state.payload)\r\n          break;\r\n      \r\n        default:\r\n          break;\r\n      }\r\n    })\r\n\r\n    // this.store.select(selectAllStories).subscribe(v => this.allStories = v)\r\n    this.fetchStories().then(() => {\r\n      this.checkParamsUsername()\r\n    })\r\n  }\r\n\r\n  onEditModeButton() {\r\n    this.router.navigate(['/home'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParamsHandling: 'preserve'\r\n    })\r\n  }\r\n\r\n  async fetchStories() {\r\n    if (!!this.allStories && this.allStories.length > 0) {\r\n      return\r\n    }\r\n    this.store.dispatch(mainActions.PushLoader())\r\n    let res = await this.mainService.storyGetAll().toPromise();\r\n    let arr = res['resp'];\r\n    const result = []\r\n    Object.entries(arr).forEach(entry => {\r\n      let key = entry[0]\r\n      let story = entry[1]\r\n      result.push({\r\n        text: story,\r\n        key: key\r\n      })\r\n    })\r\n    this.store.dispatch(mainActions.setAllStories({allStories: result}))\r\n    this.store.dispatch(mainActions.PopLoader())\r\n  }\r\n\r\n  checkParamsUsername() {\r\n    this.route.queryParams.pipe(\r\n      first()\r\n    ).subscribe((params) => {\r\n      if (!!params.storyId && params.storyId != this.selectedStory?.key) {\r\n        const id = params.storyId\r\n        const match = this.allStories.filter(s => s.key == id)\r\n        if (match.length > 0) this.store.dispatch(mainActions.setSelectedStory({ selectedStory: match[0] }))\r\n      }\r\n      if (!!params.username) { // username found in url parameters, login\r\n        this.username = params.username\r\n      }\r\n    })\r\n  }\r\n\r\n  toolbar_flip_graph_style() {\r\n    this.graphStyle.LR = !this.graphStyle.LR\r\n    this.update()\r\n  }\r\n\r\n  @HostListener('document:keydown', ['$event']) keydown(event: KeyboardEvent) {\r\n    // EXIT IF DIALOGUE OPEN OR TYPING IN A SELECTED ELEMENT\r\n    if (!!this.keyboardCaptureElement) {\r\n        return\r\n    }\r\n    const key = event.key.toLowerCase()\r\n    if (key == '[' || key == ']') { // previous/next story\r\n      const dx = key == '[' ? -1 : 1\r\n      const curIndex = this.allStories.findIndex(v => v.key == this.selectedStory?.key)\r\n      let newIndex = curIndex + dx\r\n      newIndex = newIndex % this.allStories.length\r\n      newIndex = newIndex >= 0 ? newIndex : newIndex+this.allStories.length\r\n      const story = this.allStories[newIndex]\r\n      if (story !== undefined) {\r\n        this.store.dispatch(mainActions.setSelectedStory({ selectedStory: story }))\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n  onFocusKeyboardElement(event?) {\r\n    if(event){\r\n        this.keyboardCaptureElement = event.target;\r\n    } else {\r\n        this.keyboardCaptureElement = null; \r\n    }\r\n  }\r\n\r\n  toggleSidenav() {\r\n    this.store.dispatch(mainActions.setSideNavVisible({ status: !this.sidenavVisible}))\r\n  }\r\n\r\n  async setSelectedStory(story) {\r\n    this.store.dispatch(mainActions.PushLoader())\r\n\r\n    let res: any = await this.mainService.userAnnotationGetAllUsers(story.key).toPromise()\r\n    \r\n    this.allGraphs = res\r\n    let keys = res.keys\r\n    let data = res.data.map(v => JSON.parse(v))\r\n\r\n    const indicesToRemove = data.map((v, i) => mermaid_utils.isEmpty(v) ? i : -1) // remove empty stories\r\n    const suffixLen = (':' + story.key).length // remove suffix :#id\r\n\r\n    keys = keys.filter((v, i) => !indicesToRemove.includes(i)).map(v => v.substring(0, v.length - suffixLen))\r\n    data = data.filter((v, i) => !indicesToRemove.includes(i))\r\n\r\n    // sort in pairs\r\n    const pair = keys.map((_, i) => ({key: keys[i], data: data[i]}))\r\n    pair.sort((a, b) => (a.key < b.key) ? -1 : ((a.key == b.key) ? 0 : 1))\r\n\r\n    // final result\r\n    this.allGraphs.keys = pair.map((_, i) => pair[i].key)\r\n    this.allGraphs.data = pair.map((_, i) => pair[i].data)\r\n\r\n    this.selectedStory = story\r\n    this.router.navigate([], {\r\n        relativeTo: this.activatedRoute,\r\n        queryParams: {storyId: story.key}, \r\n        queryParamsHandling: 'merge',\r\n      })\r\n\r\n    const curUserKey = this.allGraphs.keys.findIndex((v) => this.username == v)\r\n    this.tabViewIndex = curUserKey >= 0 ? curUserKey : 0\r\n    this.updateTabView(this.tabViewIndex)\r\n    this.store.dispatch(mainActions.PopLoader())\r\n  }\r\n\r\n  private updateTabView(newIndex?) {\r\n    if (newIndex !== undefined) {\r\n      const some_other_index_to_fix_bug = newIndex !== 0 ? 0 : 1\r\n      this.tabViewIndex = some_other_index_to_fix_bug\r\n      this.cdr.detectChanges()\r\n      this.tabViewIndex = newIndex\r\n      this.cdr.detectChanges()\r\n    }\r\n    this.graph = !!this.allGraphs.data[this.tabViewIndex] ? this.allGraphs.data[this.tabViewIndex] : {};\r\n    this.graph.node_names = !!this.graph.node_names ? this.graph.node_names : []\r\n    this.graph.edges = !!this.graph.edges ? this.graph.edges : []\r\n    this.graph.comments = !!this.graph.comments ? this.graph.comments : ''\r\n    setTimeout(() => {\r\n      this.update()\r\n    }, 0);\r\n  }\r\n\r\n\r\n  private callback(nodeClicked) {\r\n\r\n  }\r\n\r\n  update() {\r\n    const element: any = this.mermaidDiv.nativeElement\r\n    const graph_str = mermaid_utils.obj_to_graph_str(this.graph, this.graphStyle)\r\n    // console.log(graph_str)\r\n    mermaid_utils.render(element, graph_str, this.callback.bind(this))\r\n  }\r\n\r\n\r\n}\r\n","\r\n<!-- Toolbar -->\r\n<div class=\"toolbar\" role=\"banner\">\r\n  <p-button [icon]=\"!!sidenavVisible ? 'pi pi-arrow-left' : 'pi pi-arrow-right'\" (onClick)=\"toggleSidenav()\" pTooltip=\"Open/Close sidebar\" [ngStyle]=\"{'margin-left':'8px'}\"></p-button>\r\n  <img width=\"110\" alt=\"Logo\" src=\"assets/dag.png\"/>\r\n  <span>Lux</span>\r\n    <div class=\"spacer\"></div>\r\n  <div [ngStyle]=\"{'padding-right':'16px'}\">\r\n    View Mode\r\n  </div>\r\n  <p-button icon=\"fa-solid fa-pencil\" [ngStyle]=\"{'margin-right':'16px'}\" (click)=\"onEditModeButton()\"></p-button>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<div>\r\n\r\n<app-sidenav></app-sidenav>\r\n\r\n\r\n<div class=\"content\" role=\"main\" [ngClass]=\"{'sidenav-visible': sidenavVisible}\">\r\n\r\n  <!-- GRAPH TOOLBAR -->\r\n  <p-toolbar styleClass=\"graphToolbar\">\r\n    <div class=\"p-toolbar-group-left\">\r\n        <p-button [icon]=\"!!graphStyle?.LR ? 'pi pi-arrows-h' : 'pi pi-arrows-v'\" [ngStyle]=\"{'margin-right':'5px'}\" styleClass=\"p-button-help ui-button\" \r\n            [disabled]=\"!selectedStory\" (onClick)=\"toolbar_flip_graph_style()\"></p-button>\r\n    </div>\r\n\r\n  </p-toolbar>\r\n\r\n  <p-tabView styleClass=\"graphTabView\" *ngIf=\"!!allGraphs && !!allGraphs.keys\" [activeIndex]=\"tabViewIndex\" (onChange)=\"updateTabView($event.index)\">\r\n      <p-tabPanel [header]=\"key\" *ngFor=\"let key of allGraphs.keys; let i = index\" [headerStyleClass]=\"key == username ? 'userStory' : 'not'\">\r\n      </p-tabPanel>\r\n  </p-tabView>\r\n\r\n\r\n  <div class=\"scrollableContent\">\r\n\r\n    <!-- STORY -->\r\n    <div class=\"storyarea\">\r\n      <textarea [rows]=\"5\" pInputTextarea [ngModel]=\"!!selectedStory ? selectedStory?.text : 'No story selected.'\" autoResize=\"autoResize\" disabled=\"true\"></textarea>\r\n    </div>\r\n\r\n    <!-- COMMENTS -->\r\n    <div class=\"commentarea\">\r\n      <!-- <span>&nbsp;</span> -->\r\n      <span class=\"p-float-label\">\r\n        <textarea [rows]=\"3\" pInputTextarea id=\"float-input\" [ngModel]=\"graph.comments\"\r\n            autoResize=\"autoResize\" disabled=\"true\"\r\n        ></textarea>\r\n        <label for=\"float-input\">Comments</label>\r\n      </span>\r\n    </div>\r\n\r\n    <!-- GRAPH -->\r\n    <div class=\"graph\">\r\n      <div #mermaid></div>\r\n    </div>\r\n\r\n    <!-- CLOUD BACKGROUND :) -->\r\n    <svg id=\"clouds\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2611.084\" height=\"485.677\" viewBox=\"0 0 2611.084 485.677\">\r\n      <title>Gray Clouds Background</title>\r\n      <path id=\"Path_39\" data-name=\"Path 39\" d=\"M2379.709,863.793c10-93-77-171-168-149-52-114-225-105-264,15-75,3-140,59-152,133-30,2.83-66.725,9.829-93.5,26.25-26.771-16.421-63.5-23.42-93.5-26.25-12-74-77-130-152-133-39-120-212-129-264-15-54.084-13.075-106.753,9.173-138.488,48.9-31.734-39.726-84.4-61.974-138.487-48.9-52-114-225-105-264,15a162.027,162.027,0,0,0-103.147,43.044c-30.633-45.365-87.1-72.091-145.206-58.044-52-114-225-105-264,15-75,3-140,59-152,133-53,5-127,23-130,83-2,42,35,72,70,86,49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33,61.112,8.015,113.854-5.72,150.492-29.764a165.62,165.62,0,0,0,110.861-3.236c47,94,178,113,251,33,31.385,4.116,60.563,2.495,86.487-3.311,25.924,5.806,55.1,7.427,86.488,3.311,73,80,204,61,251-33a165.625,165.625,0,0,0,120,0c51,13,108,15,157-5a147.188,147.188,0,0,0,33.5-18.694,147.217,147.217,0,0,0,33.5,18.694c49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33C2446.709,1093.793,2554.709,922.793,2379.709,863.793Z\" transform=\"translate(142.69 -634.312)\" fill=\"#eee\"/>\r\n    </svg>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ConfirmationService , MessageService} from 'primeng/api';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { TableModule } from 'primeng/table';\r\nimport { ContextMenuModule } from 'primeng/contextmenu';\r\nimport {InputTextareaModule} from 'primeng/inputtextarea';\r\nimport {TooltipModule} from 'primeng/tooltip';\r\nimport { BlockUIModule } from \"primeng/blockui\";\r\nimport {ProgressSpinnerModule} from 'primeng/progressspinner';\r\nimport {PanelModule} from 'primeng/panel';\r\nimport {TabViewModule} from 'primeng/tabview';\r\n\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { mainFeatureKey, mainReducer } from './ngrx/main.reducer';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { MainComponent } from './main-component/main.component';\r\nimport { MainService } from './main-component/main.services';\r\nimport { AutofocusDirective } from './utils/autofocus.directive';\r\nimport { SidenavComponent } from './sidenav/sidenav.component';\r\nimport { ViewerComponent } from './viewer-component/viewer.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent,\r\n    SidenavComponent,\r\n    AutofocusDirective,\r\n    ViewerComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    StoreModule.forRoot({ [mainFeatureKey]: mainReducer }),\r\n\r\n    ToolbarModule,\r\n    ButtonModule,\r\n    SplitButtonModule,\r\n    DialogModule,\r\n    BrowserAnimationsModule,\r\n    InputTextModule,\r\n    FormsModule,\r\n    ToastModule,\r\n    ConfirmDialogModule,\r\n    TableModule,\r\n    ContextMenuModule,\r\n    InputTextareaModule,\r\n    TooltipModule,\r\n    BlockUIModule,\r\n    ProgressSpinnerModule,\r\n    PanelModule,\r\n    TabViewModule,\r\n\r\n    AppRoutingModule,\r\n  ],\r\n  providers: [\r\n    MessageService,\r\n    ConfirmationService,\r\n    MainService,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import mermaid from 'mermaid';\r\n\r\nexport class mermaid_utils {\r\n\r\n  static init() {\r\n    const config = {\r\n      startOnLoad: true,\r\n      flowchart: {\r\n        useMaxWidth: true,\r\n        htmlLabels: true,\r\n        curve: 'cardinal',\r\n      },\r\n      securityLevel: 'loose',\r\n      // theme: 'forest',\r\n    };\r\n    mermaid.initialize(config);\r\n  }\r\n\r\n  static isEmpty(graph) {\r\n    const hasData = graph.node_names?.length > 0 || graph.comments?.length > 0\r\n    return !hasData\r\n  }\r\n\r\n  static isEqual(graph1, graph2){\r\n    if ( graph1.node_names?.length !== graph2.node_names?.length\r\n        || graph1.edges?.length !== graph2.edges?.length\r\n        || graph1.comments?.length !== graph2.comments?.length \r\n        || graph1.confusing !== graph2.confusing) {\r\n      return false;\r\n    }\r\n    if (graph1.comments !== graph2.comments) return false;\r\n    for (let i in graph1.node_names){\r\n      if (graph1.node_names[i].name !== graph2.node_names[i].name) return false;\r\n      if (graph1.node_names[i].physical !== graph2.node_names[i].physical) return false;\r\n      if (graph1.node_names[i].hypothetical !== graph2.node_names[i].hypothetical) return false;\r\n    }\r\n    for (let i in graph1.edges){\r\n      if (graph1.edges[i].edge[0] !== graph2.edges[i].edge[0] || graph1.edges[i].edge[1] !== graph2.edges[i].edge[1]) return false;\r\n    if (graph1.edges[i].physical !== graph2.edges[i].physical) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  static addNode(graph, node) {\r\n    graph.node_names.push(node)\r\n    return graph.node_names.length - 1\r\n  }\r\n\r\n  static addEdge(graph, edge) {\r\n    graph.edges.push(edge)\r\n  }\r\n\r\n  private static sortEdges(graph) {\r\n    const N = graph.node_names.length\r\n    graph.edges.sort((a, b) => (a[0]-b[0])*N+(a[1]-b[1]))\r\n  }\r\n\r\n  static deleteNodeEdges(graph, i) {\r\n    graph.edges = graph.edges.filter(edge => edge[0]!=i && edge[1]!=i);\r\n  }\r\n\r\n  static deleteNode(graph, i) {\r\n    this.deleteNodeEdges(graph, i)\r\n    graph.node_names.splice(i, 1) // remove i-th node\r\n    // fix edge numbers after removing edge i\r\n    graph.edges.forEach(edge => {\r\n      if(edge[0] >= i) edge[0] -= 1\r\n      if(edge[1] >= i) edge[1] -= 1\r\n    });\r\n  }\r\n\r\n  private static sanatizeName(name) {\r\n    const brokenWords = ['interpolate', 'call', 'click']\r\n    const regexstr = brokenWords.map(w => '[^a-zA-Z](' + w + ')[^a-zA-Z]').join('|')\r\n    const regex = new RegExp(regexstr, 'g')\r\n    if(name.match(regex)) {\r\n      name = name.replaceAll(regex, (w) => {return w.substring(0, w.length-1) + '_' + w.substring(w.length-1)})\r\n      console.warn('Name sanatized', name);\r\n    }\r\n    return name\r\n  }\r\n\r\n  private static addNewLineToName(name) {\r\n    const newLine = '<br/>';\r\n    let lastNewLine = -1;\r\n    for (let i = 0; i < name.length; i++) {\r\n      lastNewLine++;\r\n      if (lastNewLine < 50) {\r\n        continue\r\n      }\r\n      //need new line at first space\r\n      const cur = name.charAt(i)\r\n      if(cur == ' ') {\r\n        name = name.substring(0, i) + newLine + name.substring(i+1)\r\n        i += (newLine.length - 1)\r\n        lastNewLine = 0\r\n      }\r\n    }\r\n    return name;\r\n  }\r\n\r\n  static obj_to_graph_str(graph, graphStyle?) {\r\n    let result = 'graph '\r\n    if (graphStyle?.LR == false) {\r\n      result += 'TD'\r\n    } else {\r\n      result += 'LR'\r\n    }\r\n    result += ' \\n'\r\n    graph.node_names.forEach((node, i) => {\r\n      const nodename = i;\r\n      var name = this.sanatizeName(node.name)\r\n      name = (i+1) + ': ' + name\r\n      name = this.addNewLineToName(name)\r\n      const line = nodename + '([' + name + '])';\r\n      const callbackLine = 'click ' + nodename + ' callBackFnForMermaidJS';\r\n      result += line + '\\n'\r\n      result += callbackLine + '\\n'\r\n    })\r\n    graph.edges.forEach((edge) => {\r\n      var line = edge.edge[0] + ' --> ' + edge.edge[1];\r\n      if(!edge.physical){\r\n        line = edge.edge[0] + ' -.-> ' + edge.edge[1];\r\n      }\r\n        result += line + '\\n'\r\n    })\r\n    if(!!graphStyle) {\r\n      if (!!graphStyle.clicked) {\r\n        result += 'style ' + graphStyle.clicked + ' fill:#f9f,stroke:#333,stroke-width:2px' + '\\n'\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * Renders the graph on screen given the HTML element and the string representation of the graph\r\n   * callback is called whenever a node is clicked\r\n   */\r\n  static render(element, graph_str, callback?) {\r\n    mermaid.render(\"graphDiv\", graph_str, (svgCode, bindFunctions) => {\r\n      element.innerHTML = svgCode;\r\n      bindFunctions(element);\r\n      }\r\n    );\r\n\r\n    if(!callback) {\r\n      callback = (nodeId) => {\r\n        console.log('Hit graph callback function that was left empty', nodeId);\r\n      }\r\n    }\r\n    ;(window as any).callBackFnForMermaidJS = callback;\r\n  }\r\n\r\n  static willBeCyclic(graph, node1, node2) {\r\n    const adj: [number, number][] = [...graph.edges, [node1, node2]]\r\n    const V = graph.node_names.length\r\n  /**\r\n   * Returns true if the graph contains a\r\n   * cycle, else false.\r\n   * This function is a variation of DFS() in\r\n   * https://www.geeksforgeeks.org/archives/18212\r\n   */\r\n\r\n    // This function is a variation of DFSUtil() in\r\n    // https://www.geeksforgeeks.org/archives/18212\r\n    const isCyclicUtil = (i, visited, visitedDirty) => {\r\n      if (visitedDirty[i])\r\n          return true;\r\n\r\n      if (visited[i])\r\n          return false;\r\n\r\n      // Mark the current node as visited and part of recursion stack\r\n      visited[i] = true;\r\n      visitedDirty[i] = true;\r\n\r\n      let children = adj.filter((pair) => pair[0] == i).map((pair) => pair[1]);\r\n      \r\n      for (let c=0;c< children.length;c++)\r\n          if (isCyclicUtil(children[c], visited, visitedDirty))\r\n              return true;\r\n\r\n      visitedDirty[i] = false;\r\n\r\n      return false;\r\n    }\r\n\r\n    // Mark all the vertices as not visited and not dirty\r\n    let visited = Array(V).fill(false);\r\n    let visitedDirty = Array(V).fill(false);\r\n\r\n    // Call the recursive helper function to detect cycle in different DFS trees\r\n    for (let i = 0; i < V; i++)\r\n      if (isCyclicUtil(i, visited, visitedDirty))\r\n        return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  private static decode_google_sheet_copy(text) {\r\n    let res = []\r\n    let inseideQuote = false\r\n    let currentCellIndex = 0\r\n\r\n    for(let i=0; i<text.length; i++){\r\n        let cur = text.charAt(i)\r\n        if(currentCellIndex >= res.length){\r\n            res.push(\"\")\r\n            if(cur == '\"') { // check if quoted cell\r\n                inseideQuote = true\r\n                continue\r\n            }\r\n        }\r\n        if (cur != '\\n' && cur != '\\t' && cur != '\"') {\r\n            res[currentCellIndex] += cur\r\n        } else if(cur == '\\n' || cur == '\\t') {\r\n            if (inseideQuote) { // in quoted cell, new lines and tabs appear as is\r\n                res[currentCellIndex] += cur\r\n            } else { // new line in unquoted cell, ends cell\r\n                inseideQuote = false;\r\n                currentCellIndex += 1;\r\n            }\r\n        } else if (cur == '\"') {\r\n            if (inseideQuote) {\r\n                let nextChar = (i+1)>=text.length ? '\\n' : text.charAt(i+1)\r\n                if (nextChar == '\"') { // double quote inside quoted cell, puts single quote in result\r\n                    res[currentCellIndex] += '\"'\r\n                    i++; // skip the double quote\r\n                } else if (nextChar == '\\n' || nextChar == '\\t') { // single quote in quoted cell, end quoted cell\r\n                    inseideQuote = false;\r\n                    currentCellIndex += 1;\r\n                    i++; // skip newline afterwards\r\n                } else if (nextChar == '\\r') { // single quote in quoted cell, end quoted cell\r\n                  inseideQuote = false;\r\n                  currentCellIndex += 1;\r\n                  i += 2; // skip \\r and newline afterwards\r\n                } else {\r\n                  console.error('UNEXPECTED STATE PARSING FROM GOOGLE SHEETS AT INDEX', i, currentCellIndex, inseideQuote, cur, nextChar);\r\n                }\r\n            } else { // in unquoted cell, quotations appear as is\r\n                res[currentCellIndex] += cur\r\n            }\r\n        }\r\n    }\r\n    return res;\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MainComponent } from './main-component/main.component';\r\nimport { ViewerComponent } from './viewer-component/viewer.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: MainComponent,},\r\n  { path: 'view', component: ViewerComponent,},\r\n  { path: '**', redirectTo: '/home', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Action, createAction, createFeatureSelector, createReducer, createSelector, on, props } from '@ngrx/store';\r\n\r\n\r\n// ACTIONS\r\nexport const mainActions = {\r\n  PushLoader: createAction('[Main Action] PushLoader'),\r\n  PopLoader: createAction('[Main Action] PopLoader'),\r\n  setSideNavVisible: createAction('[Main Action] setSideNavVisible', props<{status: boolean}>()),\r\n  setKeyboardFocudEle: createAction('[Main Action] setKeyboardFocudEle', props<{payload: any}>()),\r\n  setAllStories: createAction('[Main Action] setAllStories', props<{allStories: any}>()),\r\n  setSelectedStory: createAction('[Main Action] setSelectedStory', props<{selectedStory: any}>()),\r\n}\r\n\r\n\r\n// STATE\r\n\r\n\r\nexport type mainState = {\r\n  allStories: any[],\r\n  selectedStory: any,\r\n  loaderTasks: number,\r\n  sideNavStatus: boolean,\r\n\r\n  payload: any,\r\n  action: string,\r\n}\r\nconst initialState: mainState = {\r\n  allStories: null,\r\n  selectedStory: null,\r\n  loaderTasks: 0,\r\n  sideNavStatus: true,\r\n\r\n  payload: null,\r\n  action: null,\r\n};\r\n\r\n\r\n// REDUCER\r\n\r\nexport const mainReducer = createReducer(\r\n  initialState,\r\n\r\n  on(mainActions.PushLoader, (state) => ({...state, action: mainActions.PushLoader.type, loaderTasks: state.loaderTasks+1})),\r\n  on(mainActions.PopLoader, (state) => ({...state, action: mainActions.PopLoader.type, loaderTasks: state.loaderTasks-1})),\r\n\r\n  on(mainActions.setAllStories, (state, { allStories }) => ({...state, action: mainActions.setAllStories.type, allStories: allStories})),\r\n  on(mainActions.setSelectedStory, (state, { selectedStory }) => ({...state, action: mainActions.setSelectedStory.type, selectedStory: selectedStory})),\r\n  on(mainActions.setSideNavVisible, (state, { status }) => ({...state, action: mainActions.setSideNavVisible.type, sideNavStatus: status})),\r\n  on(mainActions.setKeyboardFocudEle, (state, { payload }) => ({...state, action: mainActions.setKeyboardFocudEle.type, payload: payload})),\r\n)\r\n\r\nexport const mainFeatureKey = 'mainFeatureKey';\r\nexport const selectMainState = createFeatureSelector<mainState>(mainFeatureKey);\r\n\r\nexport const selectAllStories = createSelector(\r\n  selectMainState,\r\n  (state) => state.allStories\r\n);\r\n\r\nexport const selectSelectedStory = createSelector(\r\n  selectMainState,\r\n  (state) => state.selectedStory\r\n);\r\n\r\nexport const selectLoaderTasks = createSelector(\r\n  selectMainState,\r\n  (state) => state.loaderTasks\r\n);\r\n\r\nexport const selectSideNavStatus = createSelector(\r\n  selectMainState,\r\n  (state) => state.sideNavStatus\r\n);\r\n","import { Directive, ElementRef, Input } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[autofocus]'\r\n})\r\nexport class AutofocusDirective {\r\n\r\n    private focus;\r\n\r\n    constructor(private el: ElementRef) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    @Input() set autofocus(condition: boolean) {\r\n        const cond = condition != false;\r\n        if (cond && !this.focus) {\r\n            setTimeout(() => {\r\n                this.el.nativeElement.focus()\r\n            }, 0);\r\n        }\r\n        this.focus = cond\r\n    }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}